import java.util.ArrayList;
import java.util.Iterator;

Draft 1:
public class BasicLinkedList<T> {
	Node<T> head = null;
	Node<T> tail;
	int size;
	
	public BasicLinkedList(){
		size = 0;
		head = null;
		tail = null;
		
	}
	
	protected class Node<T> {
		T element;
		Node<T> next;
		protected Node (T data, Node<T> n){
			element = data;
			next = n;
		}
		public T getElement(){
			return element;
		}
		public Node<T> getNext(){
			return next;
		}
		public void setNext(Node<T> n){
			next = n;
		}
	}

	public void addToEnd(T data) {
		Node<T> n = new Node<>(data, null);
		if(isEmpty()){
			head = tail;
		}
		else{
		tail.setNext(n);
		tail = n;
		//n.next = head;
		size++;
		}
	}
	
	public boolean isEmpty() {
	
		return size==0;
	}

	public BasicLinkedList<T> addToFront(T data){
	
		return null;
		}

	public int getSize() {

		return size;
	}

	public Object getLast() {
		
		return ;
	}

	public Object getFirst() {
		// TODO Auto-generated method stub
		return null;
	}

	public ArrayList<String> toArrayList() {
		// TODO Auto-generated method stub
		return null;
	}

	public Iterator<String> iterator() {
		// TODO Auto-generated method stub
		return null;
	}
	
	

}
